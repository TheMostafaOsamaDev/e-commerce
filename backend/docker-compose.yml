services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - e_commerce_network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5

  e_commerce_db:
    image: mysql:8
    container_name: e_commerce_db
    restart: always
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: e_commerce
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - e_commerce_network
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "user",
          "-ppassword",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    ports:
      - "5000:80"
    environment:
      PMA_HOST: e_commerce_db
      MYSQL_ROOT_PASSWORD: root
    depends_on:
      - e_commerce_db
    networks:
      - e_commerce_network

  redis:
    image: redis:7
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data # Mount a volume for persistent storage
    networks:
      - e_commerce_network
    command: ["redis-server", "--save", "60", "1", "--appendonly", "yes"] # Enable AOF persistence
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  auth-service:
    build: ./apps/auth-service
    container_name: auth_service
    environment:
      - NODE_ENV=development
      - DB_HOST=e_commerce_db
      - DB_PORT=3306
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_NAME=e_commerce
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - RABBITMQ_QUEUE=auth_queue
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - ./apps/auth-service:/app
      - /app/node_modules
    command: sh -c "sleep 15 && npm run start:dev"
    depends_on:
      rabbitmq:
        condition: service_healthy
      e_commerce_db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - e_commerce_network
    restart: on-failure

  api-gateway:
    build: ./apps/gateway
    container_name: api_gateway
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=development
      - AUTH_SERVICE_URL=auth-service
      - DB_HOST=e_commerce_db
      - DB_PORT=3306
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_NAME=e_commerce
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - RABBITMQ_QUEUE=gateway_queue
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - ./apps/gateway:/app
      - /app/node_modules
    command: sh -c "sleep 20 && npm run start:dev"
    depends_on:
      - auth-service
      - redis
    networks:
      - e_commerce_network
    restart: on-failure

volumes:
  rabbitmq_data:
    driver: local
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  e_commerce_network:
    driver: bridge
